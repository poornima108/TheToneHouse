@model ToneHouseMvc.Models.tb_PlanOpted

<script type="text/javascript">
    //weight gain
    $(document).ready(function () {
        $("#savebtn").click(function () {
            $("#show").show();
            $("#form").hide();
        });
    });
</script>
<link href="~/stamina/css/Login_style.css" rel="stylesheet" />
<h2 id="show" style="display:none;">Total calories burn till now !! @ViewBag.sum</h2>
<div>
    <div id="LoginForm">
        <div class="container-fluid">
            <div class="login-form">
                <div class="main-div">
                    <div id="form">

                        @using (Html.BeginForm("Save", "PersonalDashboard"))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                <h4>Add calories to your total !</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @*@Html.For(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                                    <div class="col-md-10">
                                        @Html.HiddenFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @*@Html.LabelFor(model => model.ExerciseId, "ExerciseId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                                    <div class="col-md-10">
                                        @Html.HiddenFor(model => model.ExerciseId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                                        @Html.ValidationMessageFor(model => model.ExerciseId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Distance, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Distance, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Distance, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Calories, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Calories, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Calories, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                        @Html.LabelFor(model => model.PaymentId, "PaymentId", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.PaymentId, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.DropDownList("PaymentId", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.PaymentId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-9">
                                        <input id="savebtn" type="submit" value="Save" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }


                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

