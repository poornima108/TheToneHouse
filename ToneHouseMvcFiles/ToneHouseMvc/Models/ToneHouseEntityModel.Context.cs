//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToneHouseMvc.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class db_TheToneHouseEntities2 : DbContext
    {
        public db_TheToneHouseEntities2()
            : base("name=db_TheToneHouseEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tb_Diet> tb_Diet { get; set; }
        public virtual DbSet<tb_Exercise> tb_Exercise { get; set; }
        public virtual DbSet<tb_ExerciseGroup> tb_ExerciseGroup { get; set; }
        public virtual DbSet<tb_Payment> tb_Payment { get; set; }
        public virtual DbSet<tb_PersonalDetails> tb_PersonalDetails { get; set; }
        public virtual DbSet<tb_PlanOpted> tb_PlanOpted { get; set; }
        public virtual DbSet<tb_SignUp> tb_SignUp { get; set; }
        public virtual DbSet<tb_Type> tb_Type { get; set; }
        public virtual DbSet<tb_Workout> tb_Workout { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int usp_Insert_tb_PersonalDetails(Nullable<int> signUpId, Nullable<byte> age, Nullable<decimal> height, Nullable<decimal> weight, Nullable<decimal> bloodGroup, string gender, string phoneNo, string photoPath)
        {
            var signUpIdParameter = signUpId.HasValue ?
                new ObjectParameter("SignUpId", signUpId) :
                new ObjectParameter("SignUpId", typeof(int));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(byte));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(decimal));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("weight", weight) :
                new ObjectParameter("weight", typeof(decimal));
    
            var bloodGroupParameter = bloodGroup.HasValue ?
                new ObjectParameter("BloodGroup", bloodGroup) :
                new ObjectParameter("BloodGroup", typeof(decimal));
    
            var genderParameter = gender != null ?
                new ObjectParameter("Gender", gender) :
                new ObjectParameter("Gender", typeof(string));
    
            var phoneNoParameter = phoneNo != null ?
                new ObjectParameter("PhoneNo", phoneNo) :
                new ObjectParameter("PhoneNo", typeof(string));
    
            var photoPathParameter = photoPath != null ?
                new ObjectParameter("PhotoPath", photoPath) :
                new ObjectParameter("PhotoPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Insert_tb_PersonalDetails", signUpIdParameter, ageParameter, heightParameter, weightParameter, bloodGroupParameter, genderParameter, phoneNoParameter, photoPathParameter);
        }
    
        public virtual int usp_Insert_tb_PlanOpted(Nullable<int> userId, Nullable<int> exerciseId, Nullable<System.TimeSpan> time, Nullable<double> distance, Nullable<double> calories, Nullable<int> paymentId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var exerciseIdParameter = exerciseId.HasValue ?
                new ObjectParameter("ExerciseId", exerciseId) :
                new ObjectParameter("ExerciseId", typeof(int));
    
            var timeParameter = time.HasValue ?
                new ObjectParameter("Time", time) :
                new ObjectParameter("Time", typeof(System.TimeSpan));
    
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("Distance", distance) :
                new ObjectParameter("Distance", typeof(double));
    
            var caloriesParameter = calories.HasValue ?
                new ObjectParameter("Calories", calories) :
                new ObjectParameter("Calories", typeof(double));
    
            var paymentIdParameter = paymentId.HasValue ?
                new ObjectParameter("PaymentId", paymentId) :
                new ObjectParameter("PaymentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Insert_tb_PlanOpted", userIdParameter, exerciseIdParameter, timeParameter, distanceParameter, caloriesParameter, paymentIdParameter);
        }
    
        public virtual int usp_Insert_tb_SignUp(string firstName, string middleName, string lastName, string email, string password)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var middleNameParameter = middleName != null ?
                new ObjectParameter("MiddleName", middleName) :
                new ObjectParameter("MiddleName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_Insert_tb_SignUp", firstNameParameter, middleNameParameter, lastNameParameter, emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Sp_DietDetails_Result> Sp_DietDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DietDetails_Result>("Sp_DietDetails");
        }
    
        public virtual ObjectResult<Sp_DisplayDetails_Result> Sp_DisplayDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_DisplayDetails_Result>("Sp_DisplayDetails");
        }
    }
}
